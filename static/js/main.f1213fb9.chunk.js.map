{"version":3,"sources":["components/ButtonAppBar.js","components/ClippedDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","zIndex","drawer","paddingBottom","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Button","display","width","flexShrink","drawerPaper","drawerContainer","overflow","content","padding","paddingLeft","paddingTop","listItem","marginTop","marginBottom","ClippedDrawer","CssBaseline","Drawer","variant","paper","Typography","List","map","text","index","ListItem","button","ListItemText","primary","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,OAAQ,CACNC,OAAQR,EAAMQ,OAAOC,OAAS,GAEhCJ,QAAS,CACPK,cAAeV,EAAMK,QAAQ,SAIlB,SAASM,IACtB,IAAMC,EAAUd,IAEhB,OACE,sBAAKe,UAAWD,EAAQX,KAAxB,UACE,cAACa,EAAA,EAAD,CAAQC,SAAS,QAAQF,UAAWD,EAAQL,OAA5C,SACE,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWD,EAAQT,WAAYgB,MAAM,UAAU,aAAW,OAAnF,SACE,cAAC,IAAD,MAKF,cAACC,EAAA,EAAD,CAAQD,MAAM,UAAd,kBACA,cAACC,EAAA,EAAD,CAAQD,MAAM,UAAd,oBACA,cAACC,EAAA,EAAD,CAAQD,MAAM,UAAd,uBACA,cAACC,EAAA,EAAD,CAAQD,MAAM,UAAd,wBAGJ,qBAAKN,UAAWD,EAAQP,a,yDC7BxBP,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoB,QAAS,QAEXd,OAAQ,CACNC,OAAQR,EAAMQ,OAAOC,OAAS,GAEhCA,OAAQ,CACNa,MAVgB,IAWhBC,WAAY,GAEdC,YAAa,CACXF,MAdgB,KAgBlBG,gBAAiB,CACfC,SAAU,QAEZC,QAAS,CACPzB,SAAU,EACV0B,QAAS5B,EAAMK,QAAQ,IAEzBC,MAAO,CACLe,QAAS,OACTQ,YAAa7B,EAAMK,QAAQ,GAC3ByB,WAAY9B,EAAMK,QAAQ,IAE5B0B,SAAU,CACRV,QAAS,OACTQ,YAAa7B,EAAMK,QAAQ,GAC3ByB,WAAY9B,EAAMK,QAAQ,GAC1B2B,UAAWhC,EAAMK,QAAQ,GACzBK,cAAeV,EAAMK,QAAQ,GAC7B4B,aAAcjC,EAAMK,QAAQ,QAIjB,SAAS6B,IACtB,IAAMtB,EAAUd,IAEhB,OACE,sBAAKe,UAAWD,EAAQX,KAAxB,UACE,cAACkC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEvB,UAAWD,EAAQH,OACnB4B,QAAQ,YACRzB,QAAS,CACP0B,MAAO1B,EAAQY,aAJnB,UAOE,cAACR,EAAA,EAAD,IACA,sBAAKH,UAAWD,EAAQa,gBAAxB,UACE,cAACc,EAAA,EAAD,CAAYF,QAAQ,KAAKxB,UAAWD,EAAQN,MAA5C,uBAGA,cAACkC,EAAA,EAAD,UACG,CAAC,eAAgB,WAAY,WAAY,eAAeC,KAAI,SAACC,EAAMC,GAAP,OAC3D,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAYhC,UAAWD,EAAQmB,SAA/C,SACE,cAACe,EAAA,EAAD,CAAcC,QAASL,KADHA,iBC5DrBM,MATf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,cAACF,EAAD,IACA,cAACuB,EAAD,QCISe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1213fb9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  spacing: {\n    paddingBottom: theme.spacing(10),\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography> */}\n          <Button color=\"inherit\">Home</Button>\n          <Button color=\"inherit\">Videos</Button>\n          <Button color=\"inherit\">Downloads</Button>\n          <Button color=\"inherit\">About</Button>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.spacing}></div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  title: {\n    display: 'flex',\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n  },\n  listItem: {\n    display: 'flex',\n    paddingLeft: theme.spacing(3),\n    paddingTop: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginBottom: theme.spacing(0),\n  },\n}));\n\nexport default function ClippedDrawer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Tutorials\n          </Typography>\n          <List>\n            {['Combine Mesh', 'Cut Mesh', 'Zap Mesh', 'Bridge Mesh'].map((text, index) => (\n              <ListItem button key={text} className={classes.listItem}>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          {/* <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List> */}\n        </div>\n      </Drawer>\n    </div>\n  );\n}","import './App.css';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport ClippedDrawer from './components/ClippedDrawer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ButtonAppBar />\n      <ClippedDrawer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}